# -*- coding: utf-8 -*-
"""3jAN.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1nO9YTlyN21_E4c0lzxjHqESkTZoRFvtq

Q1 :Senna went to school and learnt about Lucky numbers. Lucky numbers are subset of integers. Take the set of integers
1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,……
First, delete every second number, we get following reduced set.
1,3,5,7,9,11,13,15,17,19,…………
Now, delete every third number, we get
1, 3, 7, 9, 13, 15, 19,….….
Continue this process indefinitely……
Any number that does NOT get deleted due to above process is called “lucky”.
Therefore, set of lucky numbers is 1, 3, 7, 13,………
So let us now help Senna to make a python code for finding out the lucky number
"""

def lucky_numbers(n):
    nums = list(range(1, n + 1))
    i = 1
    while i < len(nums):
        step = nums[i]
        filtered_nums = []
        for j in range(len(nums)):
            if (j + 1) % step != 0:
                filtered_nums.append(nums[j])
        nums = filtered_nums
        i += 1
    return nums

print(lucky_numbers(100))

"""Q2 : Nidhi went to computer class and her
teacher gave her a class assignment. The
assignment was to create a python program
that takes a sentence as input and removes
all the vowels present. The program needs
to have a count of vowels removed and
Nidhi also needs to display the original
sentence, the number of vowels removed
and the sentence without vowels. Write a
program to help Nidhi.
"""

def remove_vowels(sentence):
    vowels = "aeiouAEIOU"
    count = 0
    sentence_without_vowels = ""

    for char in sentence:
        if char in vowels:
            count += 1
        else:
            sentence_without_vowels += char

    print("Original Sentence:", sentence)
    print("Number of Vowels Removed:", count)
    print("Sentence without Vowels:", sentence_without_vowels)

input_sentence = input("Enter a sentence: ")
remove_vowels(input_sentence)

"""Q3 : Lineart Rectangle Large Illustration
woman got ideas concept
Python File Icon
Subhi wants to calculate how much percentage of marks she scored while taking her exams. She had 5 subjects in total and the full marks for each subject was 100. Generate a computer program that can take the input of marks for the 5 subjects, store them in a list and display the total marks she got and the total marks of the subjects and finally the percentage of her score.
"""

def calculate_percentage():
    marks = []
    for i in range(5):
        mark = float(input(f"Enter marks for subject {i + 1} (out of 100): "))
        marks.append(mark)
    total_marks = sum(marks)
    total_full_marks = 5 * 100
    percentage = (total_marks / total_full_marks) * 100
    print("\nResults:")
    print("Total Marks Scored:", total_marks)
    print("Total Full Marks:" ,total_full_marks)
    print("Percentage:", percentage,"%")

calculate_percentage()

"""Q4 :Now that Subhi has received a general idea of the percentage of marks she has scored, she wants to check if the marks are graded or not. Check the marks for each subject and grade the subjects accordingly. Pass greater than 50 and Fail is lesser than 50.

Using print statements display a report card for the following program displaying the marks in every subject, their respective grade. Also display the percentage of marks calculated.

Use print statements to make the program visually appealing.
"""

def generate_report_card():
    marks = []
    grades = []
    for i in range(5):
        mark = float(input(f"Enter marks for subject {i + 1} (out of 100): "))
        marks.append(mark)
        grades.append("Pass" if mark >= 50 else "Fail")

    total_marks = sum(marks)
    total_full_marks = 5 * 100
    percentage = (total_marks / total_full_marks) * 100
    print("\n          Report Card")
    for i in range(5):
        print(f"Subject {i + 1}: Marks = {marks[i]}, Grade = {grades[i]}")
    print(f"Total Marks: {total_marks}/{total_full_marks}")
    print(f"Percentage: {percentage:.2f}%")


generate_report_card()

"""Q5 :Home Task 1- Income Tax Calculator
Nidhi's father is not able to calculate his income tax
correctly. He is a bit confused with the taxation rule
also each year his total annual income is different.
So to help her father, Nidhi decides to write a
python program that can calculate the tax to be
paid based on annual income. Write the same
program to calculate the tax to be paid based on
annual income.

Use print statements to make the program visually
appealing.
"""

def income_tax_calculator():
    print("         Income Tax Calculator\n")

    income = float(input("Enter your annual income (₹): "))
    if income <= 250000:
        tax = 0
        rate = "No Tax"
    elif income <= 500000:
        tax = (income - 250000) * 0.05
        rate = "5%"
    elif income <= 1000000:
        tax = 12500 + (income - 500000) * 0.2
        rate = "20%"
    else:
        tax = 12500 + 100000 + (income - 1000000) * 0.3
        rate = "30%"

    print("Annual Income: ₹",income)
    print("Tax Rate Applied: ",rate)
    print("Tax Payable: ₹",tax)


income_tax_calculator()

"""Q6 : Roshan went to school on a Monday morning and
learnt about strings and if else statements. One
assignment given in the class was to check if the given
string was a palindrome or not. A palindrome is a word
which when reversed is the same as the word itself.
The teacher of the class asked Roshan to create a
visually appealing program that takes only a three
letter string as input and displays a message if the
string is greater than three letters. The string is then
reversed and checked using the if else condition if it is
a palindrome or not.
"""

def check_palindrome():
    word = input("Enter a three-letter string: ")
    if len(word) != 3:
        print("Error: Please enter a three-letter string.")
    elif word == word[::-1]:
        print("The string is a palindrome!")
    else:
        print("The string is not a palindrome.")

check_palindrome()